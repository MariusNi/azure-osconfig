# E2E test pipeline - Performs end-to-end tests
# Pipeline supports both Cloud and Baremetal targets
# Baremetal targets must be provisioned with azure-pipelines-agent (see TODO)
# TODO: Add README.md

name: $(MajorVersion).$(MinorVersion).$(PatchVersion).$(Date:yyyyMMdd)$(Rev:rr)

resources:
  containers:
  - container: ubuntu
    image: ubuntu:18.04
  - container: dotnet
    image: mcr.microsoft.com/dotnet/sdk:5.0

parameters:
- name: runCloudTests
  displayName: Run Cloud tests
  type: boolean
  default: true
- name: runBaremetalTests
  displayName: Run Baremetal tests
  type: boolean
  default: true
- name: testExpression
  displayName: Test expression to use
  type: string
  default: ' '
- name: skipTeardown
  displayName: Leave test infrastructure in-place
  type: boolean
  default: false
- name: sourceBranch
  displayName: 'Branch to use package from (default: source branch if empty)'
  type: string
  default: ' '
- name: twinTimeout
  displayName: Timeout for twin updates
  type: number
  default: 90
# - name: PRE_SCRIPT
#   displayName: 'Shell script to execute before osconfig install'
#   type: string
#   default: ' '
- name: postScript
  displayName: Shell script to execute after osconfig install
  type: string
  default: ' '
  
  # TODO: Define targets here!

variables:
  SERVICE_CONNECTION: OSconfig-arm
  IOTHUBOWNER_CONN_STR: $(IOTHUBOWNER_CONNECTION_STRING)

stages:
- template: stages/e2etest_iothub_create.yaml

- ${{ if eq(parameters.runCloudTests, 'true') }}:
  - template: stages/e2etest_cloud.yaml
    parameters:
      testExpression: ${{ parameters.testExpression }}
      skipTeardown: ${{ parameters.skipTeardown }}
      twinTimeout: ${{ parameters.twinTimeout }}
      postScript: ${{ parameters.postScript }}
      sourceBranch: ${{ parameters.sourceBranch }}
      target:
        distroName: debian-9
        image_publisher: credativ
        image_offer: Debian
        image_sku: 9
        image_version: latest
        packagePattern: '**/*stretch_x86_64.deb'
        device_id: debian9
        pre_script: >-
          export DEBIAN_FRONTEND=noninteractive &&
          sudo apt update && sudo apt install curl wget -y &&
          wget https://github.com/Azure/azure-iotedge/releases/download/1.2.8/aziot-identity-service_1.2.6-1_debian9_amd64.deb &&
          sudo dpkg -i aziot-identity-service_1.2.6-1_debian9_amd64.deb

  - template: stages/e2etest_cloud.yaml
    parameters:
      testExpression: ${{ parameters.testExpression }}
      skipTeardown: ${{ parameters.skipTeardown }}
      twinTimeout: ${{ parameters.twinTimeout }}
      postScript: ${{ parameters.postScript }}
      sourceBranch: ${{ parameters.sourceBranch }}
      target:
        distroName: ubuntu-18.04
        image_publisher: Canonical
        image_offer: UbuntuServer
        image_sku: 18.04-LTS
        image_version: latest
        packagePattern: '**/*bionic_x86_64.deb'
        device_id: ubuntu1804
        pre_script: >-
          export DEBIAN_FRONTEND=noninteractive &&
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg &&
          sudo cp ./microsoft.gpg /etc/apt/trusted.gpg.d/ &&
          curl https://packages.microsoft.com/config/ubuntu/18.04/multiarch/prod.list > ./microsoft-prod.list &&
          sudo cp ./microsoft-prod.list /etc/apt/sources.list.d/ &&
          sudo apt update &&
          sudo apt install aziot-identity-service

  - template: stages/e2etest_cloud.yaml
    parameters:
      testExpression: ${{ parameters.testExpression }}
      skipTeardown: ${{ parameters.skipTeardown }}
      twinTimeout: ${{ parameters.twinTimeout }}
      postScript: ${{ parameters.postScript }}
      sourceBranch: ${{ parameters.sourceBranch }}
      target:
        distroName: ubuntu-20.04
        image_publisher: Canonical
        image_offer: 0001-com-ubuntu-server-focal
        image_sku: 20_04-lts-gen2
        image_version: latest
        packagePattern: '**/*focal_x86_64.deb'
        device_id: ubuntu2004
        pre_script: >-
          export DEBIAN_FRONTEND=noninteractive &&
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg &&
          sudo cp ./microsoft.gpg /etc/apt/trusted.gpg.d/ &&
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > ./microsoft-prod.list &&
          sudo cp ./microsoft-prod.list /etc/apt/sources.list.d/ &&
          sudo apt update &&
          sudo apt install aziot-identity-service

- ${{ if eq(parameters.runBaremetalTests, 'true') }}:
  - template: stages/e2etest_baremetal.yaml
    parameters:
      jobName: rpi4_buster
      deviceId: rpi4_buster
      packagePattern: '**/*focal_aarch64.deb'
      environment: rpi4-arm64
      testExpression: ${{ parameters.testExpression }}
      sourceBranch: ${{ parameters.sourceBranch }}

  - template: stages/e2etest_baremetal.yaml
    parameters:
      jobName: nvidia_jetson_bionic
      deviceId: nvidia_jetson_bionic
      packagePattern: '**/*bionic_aarch64.deb'
      environment: nvidia-jetson-arm64
      testExpression: ${{ parameters.testExpression }}
      sourceBranch: ${{ parameters.sourceBranch }}

# TODO: needs dependencies fed to it to destroy properly
- template: stages/e2etest_iothub_delete.yaml
  parameters:
    dependsOn: 
    - Run_Test_Driver_ubuntu1804
    - Run_Test_Driver_ubuntu2004
    - Run_Test_Driver_debian9
    - Run_Test_Driver_rpi4_buster
    - Run_Test_Driver_nvidia_jetson_bionic